// Generated by Apple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIView;


/// The PKHUD object controls showing and hiding of the HUD, as well as its contents and touch response behavior.
SWIFT_CLASS("_TtC5PKHUD5PKHUD")
@interface PKHUD : NSObject
+ (PKHUD * __nonnull)sharedHUD;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) BOOL dimsBackground;
@property (nonatomic) BOOL userInteractionOnUnderlyingViewsEnabled;
@property (nonatomic, readonly) BOOL isVisible;
@property (nonatomic, strong) UIView * __nonnull contentView;
- (void)show;
- (void)hideWithAnimated:(BOOL)anim;
- (void)hideAfterDelay:(NSTimeInterval)delay;
@end

@class UIImage;


/// PKHUDAssets provides a set of default images, that can be supplied to the PKHUD's content views.
SWIFT_CLASS("_TtC5PKHUD11PKHUDAssets")
@interface PKHUDAssets : NSObject
+ (UIImage * __nonnull)crossImage;
+ (UIImage * __nonnull)checkmarkImage;
+ (UIImage * __nonnull)progressImage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;


/// PKHUDSquareBaseView provides a square view, which you can subclass and add additional views to.
SWIFT_CLASS("_TtC5PKHUD19PKHUDSquareBaseView")
@interface PKHUDSquareBaseView : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// PKHUDErrorView provides an animated error (cross) view.
SWIFT_CLASS("_TtC5PKHUD14PKHUDErrorView")
@interface PKHUDErrorView : PKHUDSquareBaseView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;


/// PKHUDImageView provides a square view, which you can use to display a single image.
SWIFT_CLASS("_TtC5PKHUD14PKHUDImageView")
@interface PKHUDImageView : PKHUDSquareBaseView
- (nonnull instancetype)initWithImage:(UIImage * __nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, readonly, strong) UIImageView * __nonnull imageView;
@end



/// PKHUDProgressView provides an indeterminate progress view.
SWIFT_CLASS("_TtC5PKHUD17PKHUDProgressView")
@interface PKHUDProgressView : PKHUDImageView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@class UILabel;


/// PKHUDStatusView provides a square view, which you can use to display a picture, a title and a subtitle. This type of view replicates the Apple HUD one to one.
SWIFT_CLASS("_TtC5PKHUD15PKHUDStatusView")
@interface PKHUDStatusView : PKHUDImageView
- (nonnull instancetype)initWithTitle:(NSString * __nullable)title subtitle:(NSString * __nullable)subtitle image:(UIImage * __nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, readonly, strong) UILabel * __nonnull titleLabel;
@property (nonatomic, readonly, strong) UILabel * __nonnull subtitleLabel;
@end



/// PKHUDSubtitleView provides a square view, which you can use to display a picture and a subtitle (beneath the image).
SWIFT_CLASS("_TtC5PKHUD17PKHUDSubtitleView")
@interface PKHUDSubtitleView : PKHUDImageView
- (nonnull instancetype)initWithSubtitle:(NSString * __nullable)subtitle image:(UIImage * __nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, readonly, strong) UILabel * __nonnull subtitleLabel;
@end



/// PKHUDCheckmarkView provides an animated success (checkmark) view.
SWIFT_CLASS("_TtC5PKHUD16PKHUDSuccessView")
@interface PKHUDSuccessView : PKHUDSquareBaseView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)startAnimation;
- (void)stopAnimation;
@end



/// PKHUDSystemActivityIndicatorView provides the system UIActivityIndicatorView as an alternative.
SWIFT_CLASS("_TtC5PKHUD32PKHUDSystemActivityIndicatorView")
@interface PKHUDSystemActivityIndicatorView : PKHUDSquareBaseView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end



/// PKHUDWideBaseView provides a wide base view, which you can subclass and add additional views to.
SWIFT_CLASS("_TtC5PKHUD17PKHUDWideBaseView")
@interface PKHUDWideBaseView : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// PKHUDTextView provides a wide, three line text view, which you can use to display information.
SWIFT_CLASS("_TtC5PKHUD13PKHUDTextView")
@interface PKHUDTextView : PKHUDWideBaseView
- (nonnull instancetype)initWithText:(NSString * __nullable)text OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, readonly, strong) UILabel * __nonnull titleLabel;
@end



/// PKHUDTitleView provides a square view, which you can use to display a picture and a title (above the image).
SWIFT_CLASS("_TtC5PKHUD14PKHUDTitleView")
@interface PKHUDTitleView : PKHUDImageView
- (nonnull instancetype)initWithTitle:(NSString * __nullable)title image:(UIImage * __nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, readonly, strong) UILabel * __nonnull titleLabel;
@end


#pragma clang diagnostic pop
